<?xml version="1.0"?>

<project name="najtek" basedir="." default="usage">
	<property file="build.properties" />

	<property name="src.dir" value="src" />
	<property name="web.dir" value="war" />
	<property name="build.dir" value="${web.dir}/WEB-INF/classes" />
	<property name="name" value="najtek" />
	<property name="app.deploy.name" value="n" />

	<path id="master-classpath">
		<fileset dir="${web.dir}/WEB-INF/lib">
			<include name="*.jar" />
		</fileset>
		<!-- We need the servlet API classes: -->
		<!--  * for Tomcat 5/6 use servlet-api.jar -->
		<!--  * for other app servers - check the docs -->
		<fileset dir="${appserver.lib}">
			<include name="servlet*.jar" />
		</fileset>
		<pathelement path="${build.dir}" />
	</path>

	<target name="usage">
		<echo message="" />
		<echo message="${name} build file" />
		<echo message="-----------------------------------" />
		<echo message="" />
		<echo message="Available targets are:" />
		<echo message="" />
		<echo message="build      --> Build the application" />
		<echo message="deploy     --> Deploy application as directory" />
		<echo message="deploywar  --> Deploy application as a WAR file" />
		<echo message="tests      --> List Tomcat applications" />
		<echo message="clean      --> Clean output directories" />
		<echo message="undeploy   --> Un-deploy application" />
		<echo message="copymapper --> Copy *Mapper.xml files to deploy path" />
		<echo message="" />
	</target>

	<target name="build" depends="copymapper" description="Compile main source tree java files">
		<mkdir dir="${build.dir}" />
		<javac destdir="${build.dir}" source="1.8" target="1.8" debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${src.dir}" />
			<classpath refid="master-classpath" />
		</javac>
	</target>

	<target name="copymapper" description="Copies mapper.xml files">
		<copy todir="${build.dir}" preservelastmodified="true" verbose="true">
			<fileset dir="${src.dir}">
				<include name="**/*.xml" />
			</fileset>
		</copy>
	</target>

	<target name="clean" description="Clean output directories">
		<delete>
			<fileset dir="${build.dir}">
				<include name="**/*.class" />
			</fileset>
		</delete>
	</target>

	<target name="undeploy" description="Un-deploy application">
		<delete>
			<fileset dir="${deploy.path}/${app.deploy.name}">
				<include name="**/*.*" />
			</fileset>
		</delete>
	</target>

	<target name="deploy" depends="build" description="Deploy application">
		<copy todir="${deploy.path}/${app.deploy.name}" preservelastmodified="true">
			<fileset dir="${web.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>

	<target name="deploywar" depends="build" description="Deploy application as a WAR file">
		<war destfile="${app.deploy.name}.war" webxml="${web.dir}/WEB-INF/web.xml">
			<fileset dir="${web.dir}">
				<include name="**/*.*" />
			</fileset>
		</war>
		<copy todir="${deploy.path}" preservelastmodified="true">
			<fileset dir=".">
				<include name="*.war" />
			</fileset>
		</copy>
	</target>

	<property name="test.dir" value="test" />

	<target name="buildtests" description="Compile test tree java files">
		<mkdir dir="${build.dir}" />
		<javac destdir="${build.dir}" source="1.8" target="1.8" debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${test.dir}" />
			<classpath refid="master-classpath" />
		</javac>
	</target>

	<target name="tests" depends="build, buildtests" description="Run tests">
		<junit printsummary="on" fork="false" haltonfailure="false" failureproperty="tests.failed" showoutput="true">
			<classpath refid="master-classpath" />
			<formatter type="brief" usefile="false" />

			<batchtest>
				<fileset dir="${build.dir}">
					<include name="**/*Tests.*" />
				</fileset>
			</batchtest>

		</junit>

		<fail if="tests.failed">
	            tests.failed=${tests.failed}
	            ***********************************************************
	            ***********************************************************
	            ****  One or more tests failed!  Check the output ...  ****
	            ***********************************************************
	            ***********************************************************
	        </fail>
	</target>

</project>
